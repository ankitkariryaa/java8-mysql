<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.unibonn</groupId>
	<artifactId>Creedo</artifactId>
	<version>0.4.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<repositories>
		<repository>
			<id>realKD-releases</id>
			<url>https://bitbucket.org/realKD/releases/raw/master/releases</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</snapshots>
		</repository>

		<repository>
			<id>ProjectRepo</id>
			<name>ProjectRepo</name>
			<url>file://${project.basedir}/libs</url>
		</repository>

	</repositories>

	<properties>
		<springVersion>4.2.2.RELEASE</springVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<!-- realKD library -->
		<!-- MIT license -->
		<dependency>
			<groupId>de.unibonn</groupId>
			<artifactId>realKD</artifactId>
			<version>0.3.1-SNAPSHOT</version>
		</dependency>

		<!-- Guava: object utilities -->
		<!-- Apache License 2.0 -->
		<!-- no documented usage restrictions -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
			<scope>compile</scope>
		</dependency>

		<!-- Gson: Java to Json conversion -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.3.1</version>
			<scope>compile</scope>
		</dependency>

		<!-- myBatis: persistence framework -->
		<!-- Apache License 2.0 -->
		<!-- no documented usage restrictions -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.0.4</version>
		</dependency>

		<!-- mysql-connector-java-5.1.21-bin.jar: required for access of mySQL 
			db -->
		<!-- The GNU General Public License, Version 2 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.21</version>
		</dependency>

		<!-- jfreechart: for pattern illustrations -->
		<!-- GNU Lesser General Public Licence -->
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>1.0.19</version>
		</dependency>

		<!-- spring webmvc: web framework -->
		<!-- Apache License 2.0 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springVersion}</version>
		</dependency>

		<!-- spring context support: for MailService -->
		<!-- Apache License 2.0 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${springVersion}</version>
		</dependency>

		<!-- opencsv: csv parsing -->
		<!-- THIS IS ACTUALLY A REALKD DEPENDENCY -->
		<!-- Apache License 2.0 -->
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.1</version>
		</dependency>

		<!-- jstl: additional jsp tags -->
		<!-- COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL - Version 1.1) -->
		<!-- GNU General Public License (GPL - Version 2, June 1991) with the Classpath 
			Exception -->
		<!-- artifact under new (perhaps recommended) location cannot be found 
			http://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl/1.2 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- jackson-mapper-asl: high-performance data binding package built on 
			Jackson JSON processor -->
		<!-- Apache License 2.0 -->
		<!-- Without this being available at runtime our datatables will not be -->
		<!-- loaded. There is no exception however. Probably eaten somewhere. -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<!-- commons-fileupload: I suppose for the file uploads by custom dashboard 
			creation -->
		<!-- Apache License 2.0 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!-- commons-io: needed by custom dashboard creation (even when with no 
			file upload) -->
		<!-- Apache License 2.0 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.2</version>
		</dependency>


		<!-- weka: data mining/machine learning library -->
		<!-- GNU General Public License 2.0 -->
		<!-- at the moment of addition of dependency only usage within creedo -->
		<!-- itself is point cloud model -->
		<!-- ocm also depends on weka; but version is unclear -->
		<dependency>
			<groupId>nz.ac.waikato.cms.weka</groupId>
			<artifactId>weka-stable</artifactId>
			<version>3.6.12</version>
		</dependency>

		<!-- mail: for mail service -->
		<!-- Common Development and Distribution License (CDDL) v1.0 -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- Sampling library -->
<!-- 		<dependency> -->
<!-- 			<groupId>consapt</groupId> -->
<!-- 			<artifactId>consapt</artifactId> -->
<!-- 			<version>0.1</version> -->
<!-- 		</dependency> -->

		<!-- Needed at compile time, provided at runtime by web container -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>Creedo</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>false</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<!-- Avoid type mvn eclipse:eclipse -Dwtpversion=2.0 -->
					<wtpversion>2.0</wtpversion>
				</configuration>
			</plugin>

			<!-- For Maven Tomcat Plugin -->
			<!-- Execute: mvn clean package -->
			<!-- Run: java -jar -Dapplication.config.file=/path/to/application.properties 
				Creedo-exec-war.jar -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<!-- Do not use 2.2! http://stackoverflow.com/questions/22237388/maven-tomcat7-plugin-produces-corrupted-executable-jar -->
				<version>2.1</version>
				<executions>
					<execution>
						<id>tomcat-run</id>
						<goals>
							<goal>exec-war-only</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<path>/${project.build.finalName}</path>
							<attachArtifactClassifier>exec-war</attachArtifactClassifier>
							<attachArtifactClassifierType>jar</attachArtifactClassifierType>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>download-licenses</id>
						<goals>
							<goal>download-licenses</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<organizationName>realKD</organizationName>
					<copyrightOwners>Contributors of the Creedo Project</copyrightOwners>
					<inceptionYear>2014</inceptionYear>
					<licenseName>mit</licenseName>
					<useMissingFile>true</useMissingFile>
					<useRepositoryMissingFiles>true</useRepositoryMissingFiles>
					<outputDirectory>${project.basedir}</outputDirectory>
					<licensesOutputDirectory>${project.basedir}/3rd-party-licenses</licensesOutputDirectory>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>